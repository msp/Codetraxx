{
  "name": "asynth",
  "version": "0.1.1",
  "description": "live midi synthesizer",
  "main": "index.js",
  "bin": {
    "asynth": "bin/cmd.js"
  },
  "dependencies": {
    "midi": "~0.6.0",
    "baudio": "~1.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/midi-synth.git"
  },
  "homepage": "https://github.com/substack/midi-synth",
  "keywords": [
    "midi",
    "synth",
    "music"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT",
  "readme": "# asynth\n\ncreate midi synths with javascript functions\n\n# example\n\n``` js\nvar asynth = require('asynth');\nvar s = asynth(function (note, t) {\n    var freq = 440 * Math.pow(2, (note.key - 49) / 12);\n    var x = Math.sin(2 * Math.PI * t * freq);\n    var y = Math.sin(2 * Math.PI * t * (freq * 2));\n    var z = Math.sin(2 * Math.PI * t * (freq / 2));\n    return x * 0.6 + y * 0.2 + z * 0.2;\n});\n\ns.play();\n```\n\nNow plug in a USB keyboard and it will sound like an organ.\n\n# methods\n\n``` js\nvar asynth = require('asynth')\n```\n\n## var b = asynth(synth)\n\nCreate a new synth out of a `synth(note, t)` function.\n\n`note.key` is the number of the key pressed on the synth.\n\nThere are some other properties like timestamps for `up`, `down`, and `start`\nevents that you might also want to care about.\n\nReturn a [baudio](https://github.com/substack/baudio) instance.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install asynth\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "bugs": {
    "url": "https://github.com/substack/midi-synth/issues"
  },
  "_id": "asynth@0.1.1",
  "dist": {
    "shasum": "b4ead3397ec6248b76df9e60567c6d70ade62cfb"
  },
  "_from": "asynth@*",
  "_resolved": "https://registry.npmjs.org/asynth/-/asynth-0.1.1.tgz"
}
